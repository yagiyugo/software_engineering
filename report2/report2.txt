3年15組56番 八木悠吾

[演習問題] Javaの言語仕様における10.2.1項の基本概念の有無を考察せよ。

a.メッセージパッシングの表現
Javaにおいて、オブジェクトの持つ機能はメソッドの集合で定義される。メソッドには、戻り値の型やパラメータ、
引数などが定められる。よって、Javaではメッセージパッシングは有ると考える。

b.カプセル化の表現
Javaにおいてカプセル化は、変数のprivate宣言やfinalをつけて不変クラス化などによって実現される。
よってカプセル化の表現は有ると考える。

c.クラスからのインスタンス生成機能の表現
Javaでは、クラスはオブジェクトの持つフィールド、メソッドなどの形式であり、new(インスタンス化)することによって
メソッドなどが使えるようになる。また、複数生成することができるので、他のクラス内で生成し継承のような機能が使える
「委譲」が実現できる。
よってクラスからのインスタンス生成機能の表現は有ると考える。

d.クラス階層と継承機能の表現
Javaでは、クラス間に階層構造を導入する(extends)ことによって、継承機能が実現できる。これにより、下位のクラスは
上位クラスの変数定義、メソッド定義を継承できる。また、メソッドをオーバーライドすることによって、同じメソッド名で
異なる実装をする「ポリモーフィズム」が実現できる。
よってクラス階層と継承機能の表現は有ると考える。


[演習問題] 図10.2のプログラム内でprotected宣言されている変数について、private宣言に変更することの是非について考察せよ。

まず、教科書P112の2行目
protected String name;
についてであるが、private宣言に変更したほうがよいと考える。
理由としては、protected宣言のままでは、クラス外からのアクセスで、データが変わってしまう可能性があるからである。
String型は不変クラスであるが、インスタンスを再生成されてしまうとnameの参照が変わってしまい、結果としてデータが
書き換えられてしまう。
よって、カプセル化を実現するためには、private宣言が必要である。この場合、nameのデータはpublic宣言されたメソッド
getNameで得ることができる。

次に、同ページ29行目
protected Calender schdule = new Calender();
についてであるが、こちらもprivate宣言に変更した方がよいと考える。
理由としては、Calendarクラスは可変オブジェクトであるため、protect宣言であるとクラス外からのアクセスで
データが書き換えられるので、カプセル化が壊れてしまう。
よって、カプセル化を実現するためには、private宣言が必要である。